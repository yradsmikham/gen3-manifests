---
---
# Source: fence/templates/cm-logo-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: logo-config
data:
  logo.svg: |-
    
    <svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 116.04 61.15"><defs><style>.cls-1{fill:#232323;}.cls-2{fill:#dccc32;}.cls-3{fill:#222;}</style></defs><title>fresh</title><path class="cls-1" d="M2.7,30C2.7,15.75,11.1,8.67,20,8.67A15.45,15.45,0,0,1,31.8,13.23l-3.12,3.24A12,12,0,0,0,20,13.05c-6,0-11.76,4.2-11.76,16.92,0,12,3.78,17,11,17a15.77,15.77,0,0,0,7.86-2V32.43H19l-.6-4.38H32.34V47.73a25.64,25.64,0,0,1-13.5,3.6C9,51.33,2.7,44.25,2.7,30Z" transform="translate(-1.06 -7.71)"/><path class="cls-1" d="M40.23,34.5H51v3H40.23V47.73H53.42v2.94H36.61V21.73H53l-.42,3H40.23Z" transform="translate(-1.06 -7.71)"/><path class="cls-1" d="M59.63,25.26c.08,1.26.5,6.46.5,10.92V50.67h-3.4V21.73h5L72.06,47.27c0-1.18-.5-5.84-.5-11.05V21.73H75V50.67H69.84Z" transform="translate(-1.06 -7.71)"/><path class="cls-2" d="M95.2,31.06V25.62q4,0,5.44-.9a5.58,5.58,0,0,0,2.49-5.09,5.77,5.77,0,0,0-1.8-4.4,6.37,6.37,0,0,0-4.62-1.72,6,6,0,0,0-4.1,1.28,8.52,8.52,0,0,0-2.08,4.43H84.18q1-6,4-8.73t8.56-2.78a12.73,12.73,0,0,1,9,3.28,11,11,0,0,1,3.5,8.4,10.4,10.4,0,0,1-4.59,9q5.25,3.09,5.25,10a12.19,12.19,0,0,1-3.83,9.29,13.73,13.73,0,0,1-9.82,3.61q-7.62,0-11.32-5.6a14.54,14.54,0,0,1-1.94-6.51h6.15a7.52,7.52,0,0,0,2.39,4.69,7.42,7.42,0,0,0,5,1.63,6.9,6.9,0,0,0,5.11-2.05,7.39,7.39,0,0,0,2-5.34q0-4.26-3-6.07A11.3,11.3,0,0,0,95.2,31.06Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M3.6,68.67H1.06V58.32H3.44c2.51,0,5,.83,5,5.12S5.91,68.67,3.6,68.67Zm.16-9h-1v7.69h1c1.44,0,2.8-.75,2.8-3.91S5.15,59.66,3.76,59.66Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M17.94,67.73l-.39,1.13a1.83,1.83,0,0,1-1.64-1.09,3.14,3.14,0,0,1-2.52,1.09,2.37,2.37,0,0,1-2.61-2.46c0-1.65,1.35-2.59,3.77-2.59h1.12V63.3c0-1-.64-1.44-1.75-1.44a6.47,6.47,0,0,0-2.1.41l-.42-1.19a8.1,8.1,0,0,1,2.77-.54c2.13,0,3.17,1,3.17,2.66v3.53C17.34,67.35,17.52,67.59,17.94,67.73Zm-2.27-1.11V64.86h-.93c-1.57,0-2.19.56-2.19,1.49a1.17,1.17,0,0,0,1.34,1.28A2.11,2.11,0,0,0,15.67,66.62Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M25.53,68.86c-1.85,0-2.82-1-2.82-2.59V62H21V60.75h1.76V59l1.68-.19v2h2.68L26.88,62H24.39v4.27c0,.86.4,1.27,1.38,1.27a3.08,3.08,0,0,0,1.47-.38l.6,1.11A4.47,4.47,0,0,1,25.53,68.86Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M37.83,67.73l-.39,1.13a1.83,1.83,0,0,1-1.64-1.09,3.14,3.14,0,0,1-2.52,1.09,2.37,2.37,0,0,1-2.61-2.46c0-1.65,1.35-2.59,3.77-2.59h1.12V63.3c0-1-.64-1.44-1.75-1.44a6.47,6.47,0,0,0-2.1.41l-.42-1.19a8.1,8.1,0,0,1,2.77-.54c2.13,0,3.17,1,3.17,2.66v3.53C37.23,67.35,37.41,67.59,37.83,67.73Zm-2.27-1.11V64.86h-.93c-1.57,0-2.19.56-2.19,1.49a1.17,1.17,0,0,0,1.34,1.28A2.11,2.11,0,0,0,35.56,66.62Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M58.21,59.16l-.9,1.08a3.28,3.28,0,0,0-2.14-.76c-1.55,0-2.85,1.08-2.85,4s1.23,4,2.86,4a3.49,3.49,0,0,0,2.34-.89l.84,1.06a4.42,4.42,0,0,1-3.24,1.23c-2.64,0-4.62-1.87-4.62-5.38s2.07-5.37,4.59-5.37A4.55,4.55,0,0,1,58.21,59.16Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M67.75,64.7c0,2.51-1.29,4.16-3.58,4.16s-3.59-1.59-3.59-4.15,1.29-4.17,3.6-4.17S67.75,62.18,67.75,64.7Zm-5.4,0c0,2,.6,2.87,1.82,2.87S66,66.67,66,64.7s-.6-2.85-1.8-2.85S62.35,62.75,62.35,64.71Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M78,62.79v5.88H76.5V63c0-.83-.06-1.17-.53-1.17a1.46,1.46,0,0,0-1.17.79v6H73.44V63c0-.83-.06-1.17-.53-1.17a1.45,1.45,0,0,0-1.17.79v6h-1.5V60.75H71.5l.12.85a2.05,2.05,0,0,1,1.7-1.06,1.3,1.3,0,0,1,1.35,1,2.11,2.11,0,0,1,1.74-1C77.31,60.54,78,61,78,62.79Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M87.93,62.79v5.88H86.44V63c0-.83-.06-1.17-.52-1.17a1.46,1.46,0,0,0-1.17.79v6H83.38V63c0-.83-.06-1.17-.52-1.17a1.43,1.43,0,0,0-1.17.79v6h-1.5V60.75h1.26l.12.85a2.05,2.05,0,0,1,1.69-1.06,1.3,1.3,0,0,1,1.35,1,2.13,2.13,0,0,1,1.74-1C87.25,60.54,87.93,61,87.93,62.79Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M97.59,64.7c0,2.51-1.29,4.16-3.59,4.16s-3.58-1.59-3.58-4.15,1.29-4.17,3.6-4.17S97.59,62.18,97.59,64.7Zm-5.4,0c0,2,.6,2.87,1.81,2.87s1.82-.91,1.82-2.88-.6-2.85-1.8-2.85S92.19,62.75,92.19,64.71Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M100.78,60.75h1.46l.12,1a3.31,3.31,0,0,1,2.56-1.25,2.06,2.06,0,0,1,2.21,2.36v5.77h-1.68V63.74c0-1.39-.17-1.91-1.13-1.91A2.42,2.42,0,0,0,102.46,63v5.68h-1.68Z" transform="translate(-1.06 -7.71)"/><path class="cls-3" d="M115.32,66.52c0-.64-.26-.94-1.89-1.36s-2.61-1-2.61-2.34S112,60.54,114,60.54a4.91,4.91,0,0,1,3,.92l-.72,1.06a4,4,0,0,0-2.25-.7c-1.08,0-1.5.34-1.5.87s.43.82,2,1.26,2.56,1,2.56,2.45c0,1.73-1.68,2.46-3.49,2.46a4.86,4.86,0,0,1-3.26-1.11l.89-1a3.76,3.76,0,0,0,2.37.86C114.66,67.59,115.32,67.19,115.32,66.52Z" transform="translate(-1.06 -7.71)"/></svg>
---

# Source: fence/templates/cm-privacy-policy.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: privacy-policy-fence
data:
  privacy_policy.md: |-
    # Privacy Policy 
    See how to generate [here](https://github.com/uc-cdis/cloud-automation/blob/96112b523583ea24d92007d3601a6626704a454c/gen3/bin/kube-setup-secrets.sh#L40)
---

# Source: fence/templates/cm-user.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-yaml
data:
  user.yaml: |-
    
    authz:
      # policies automatically given to anyone, even if they are not authenticated
      anonymous_policies:
      - open_data_reader
      - data_upload
    
      # policies automatically given to authenticated users (in addition to their other policies)
      all_users_policies:
      - data_upload
    
      groups:
      # can CRUD programs and projects and upload data files
      - name: data_submitters
        policies:
        - services.sheepdog-admin
        - data_upload
        - MyFirstProject_submitter
        users:
        - Andre.Briggs@microsoft.com
        - Andy.Gee@microsoft.com
        - Andrew.Doing@microsoft.com
        - Kira.Soderstrom@microsoft.com
        - Kaipo.Lucas@microsoft.com
        - Samiya.Akhtar@microsoft.com
        - Yvonne.Radsmikham@microsoft.com
    
      # can create/update/delete indexd records
      - name: indexd_admins
        policies:
        - indexd_admin
        users:
        - Andre.Briggs@microsoft.com
        - Andy.Gee@microsoft.com
        - Andrew.Doing@microsoft.com
        - Kira.Soderstrom@microsoft.com
        - Kaipo.Lucas@microsoft.com
        - Samiya.Akhtar@microsoft.com
        - Yvonne.Radsmikham@microsoft.com
    
      resources:
      - name: workspace
      - name: data_file
      - name: services
        subresources:
        - name: sheepdog
          subresources:
          - name: submission
            subresources:
            - name: program
            - name: project
      - name: open
      - name: programs
        subresources:
        - name: Program1
          subresources:
          - name: projects
            subresources:
            - name: P1
        subresources:
        - name: Program2
          subresources:
          - name: projects
            subresources:
            - name: P2
      - name: projects
        subresources:
        - name: project1
        - name: project2
    
      policies:
      - id: workspace
        description: be able to use workspace
        resource_paths:
        - /workspace
        role_ids:
        - workspace_user
      - id: data_upload
        description: upload raw data files to S3
        role_ids:
        - file_uploader
        resource_paths:
        - /data_file
      - id: services.sheepdog-admin
        description: CRUD access to programs and projects
        role_ids:
          - sheepdog_admin
        resource_paths:
          - /services/sheepdog/submission/program
          - /services/sheepdog/submission/project
      - id: indexd_admin
        description: full access to indexd API
        role_ids:
          - indexd_admin
        resource_paths:
          - /programs
      - id: open_data_reader
        role_ids:
          - reader
          - storage_reader
        resource_paths:
        - /open
      - id: all_programs_reader
        role_ids:
        - reader
        - storage_reader
        resource_paths:
        - /programs
      - id: MyFirstProject_submitter
        role_ids:
        - reader
        - creator
        - updater
        - deleter
        - storage_reader
        - storage_writer
        - admin
        resource_paths:
        - /programs
    
      roles:
      - id: file_uploader
        permissions:
        - id: file_upload
          action:
            service: fence
            method: file_upload
      - id: workspace_user
        permissions:
        - id: workspace_access
          action:
            service: jupyterhub
            method: access
      - id: sheepdog_admin
        description: CRUD access to programs and projects
        permissions:
        - id: sheepdog_admin_action
          action:
            service: sheepdog
            method: '*'
      - id: indexd_admin
        description: full access to indexd API
        permissions:
        - id: indexd_admin
          action:
            service: indexd
            method: '*'
      - id: admin
        permissions:
          - id: admin
            action:
              service: '*'
              method: '*'
      - id: creator
        permissions:
          - id: creator
            action:
              service: '*'
              method: create
      - id: reader
        permissions:
          - id: reader
            action:
              service: '*'
              method: read
      - id: updater
        permissions:
          - id: updater
            action:
              service: '*'
              method: update
      - id: deleter
        permissions:
          - id: deleter
            action:
              service: '*'
              method: delete
      - id: storage_writer
        permissions:
          - id: storage_creator
            action:
              service: '*'
              method: write-storage
      - id: storage_reader
        permissions:
          - id: storage_reader
            action:
              service: '*'
              method: read-storage
    
    clients:
      wts:
        policies:
        - all_programs_reader
        - open_data_reader
    users:
      Andre.Briggs@microsoft.com:
        policies:
          - workspace
          - MyFirstProject_submitter
          - data_upload
          - services.sheepdog-admin
          - all_programs_reader
          - open_data_reader
      Andy.Gee@microsoft.com:
        policies:
          - workspace
          - MyFirstProject_submitter
          - data_upload
          - services.sheepdog-admin
          - all_programs_reader
          - open_data_reader
      Andrew.Doing@microsoft.com:
        policies:
          - workspace
          - MyFirstProject_submitter
          - data_upload
          - services.sheepdog-admin
          - all_programs_reader
          - open_data_reader
      Kira.Soderstrom@microsoft.com:
        policies:
          - workspace
          - MyFirstProject_submitter
          - data_upload
          - services.sheepdog-admin
          - all_programs_reader
          - open_data_reader
      Kaipo.Lucas@microsoft.com:
        policies:
          - workspace
          - MyFirstProject_submitter
          - data_upload
          - services.sheepdog-admin
          - all_programs_reader
          - open_data_reader
      Samiya.Akhtar@microsoft.com:
        policies:
          - workspace
          - MyFirstProject_submitter
          - data_upload
          - services.sheepdog-admin
          - all_programs_reader
          - open_data_reader
      Yvonne.Radsmikham@microsoft.com:
        policies:
          - workspace
          - MyFirstProject_submitter
          - data_upload
          - services.sheepdog-admin
          - all_programs_reader
          - open_data_reader
    
    cloud_providers: {}
    groups:
    - data_submitters
    - indexd_admins
---

# Source: fence/templates/svc-fence.yaml
kind: Service
apiVersion: v1
metadata:
  name: fence-service
spec:
  selector:
    app: fence
    release: development
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
      nodePort: null
    - protocol: TCP
      port: 443
      targetPort: 443
      name: https
      nodePort: null
  type: ClusterIP
---

# Source: fence/templates/dpl-fence.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fence-deployment
spec:
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      app: fence
      release: development
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /aggregated_metrics
        prometheus.io/port: "6567"
      labels:
        app: fence
        release: development
        # for network policy selectors
        authprovider: "yes"
        # uses explicit proxy and AWS APIs
        netnolimit: "yes"
        public: "yes"
        userhelper: "yes"
        #GEN3_DATE_LABEL
        aadpodidbinding: azure-pod-identity-binding-selector
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - fence
              topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: false
      volumes:
        - name: logo-volume
          configMap:
            name: "logo-config"
        - name: secrets-store-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: fence-azure-kvname
        - name: privacy-policy
          configMap:
            name: "privacy-policy-fence"
      securityContext:
        # nginx group in current images
        fsGroup: 101
      containers:
      - name: fence
        image: "andrebriggs/fence:latest"
        env:
        - name: GEN3_UWSGI_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: manifest-global
              key: uwsgi-timeout
              optional: true
        - name: AWS_STS_REGIONAL_ENDPOINTS
          value: regional
        - name: PYTHONPATH
          value: "/var/www/fence"
        - name: GEN3_DEBUG_FLAG
          value: "False"
        - name: FENCE_PUBLIC_CONFIG
          valueFrom:
            configMapKeyRef:
              name: manifest-fence
              key: fence-config-public.yaml
              optional: true
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /_status
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /_status
            port: 80
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 6567
        volumeMounts:
          - name: "logo-volume"
            readOnly: true
            mountPath: "/fence/fence/static/img/logo.svg"
            subPath: "logo.svg"
          - name: "privacy-policy"
            readOnly: true
            mountPath: "/fence/fence/static/privacy_policy.md"
            subPath: "privacy_policy.md"
          - name: secrets-store-volume
            mountPath: "/mnt/secrets-store"
            readOnly: true
        resources:
            requests:
              cpu: 0.4
              memory: 1200Mi
            limits:
              cpu: 1.0
              memory: 2400Mi
        command: ["/bin/bash"]
        args:
          - "-c"
          - |
            echo "Copy fence-config from secret store mount"
            cp /mnt/secrets-store/fence-config /var/www/fence/fence-config.yaml

            echo "*** START TLS Certificate Setup ***"  
            
            echo "Copying public and private keys from secret store mount to required Fence location" 
            mkdir -p /fence/keys/fenceJwtKeys/
            cp /mnt/secrets-store/fenceKey /fence/keys/fenceJwtKeys/jwt_public_key.pem
            # SUPER HACKY. Figure out a cleaner way.
            cat /mnt/secrets-store/gen3-fence-jwt-keys | sed -ne '/-BEGIN PRIVATE KEY-/,/-END PRIVATE KEY-/p' > /fence/keys/fenceJwtKeys/jwt_private_key.pem
            
            echo "Copying the public gen3-service-ca cert to ca-certificates location as cdis-ca.crt" 
            mkdir -p /usr/local/share/ca-certificates/
            cp /mnt/secrets-store/gen3-service-ca /usr/local/share/ca-certificates/cdis-ca.crt
            
            echo "*** END TLS Certificate Setup ***" 

            bash /fence/dockerrun.bash && if [[ -f /dockerrun.sh ]]; then /dockerrun.sh; fi
---

# Source: fence/templates/job-fencedb-create.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: fencedb-create
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: gen3job
        aadpodidbinding: azure-pod-identity-binding-selector
    spec:
      automountServiceAccountToken: false
      volumes:
        - name: secrets-store-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: fence-azure-kvname
      containers:
      - name: fence
        image: "andrebriggs/fence:latest"
        imagePullPolicy: Always
        env:
          - name: PYTHONPATH
            value: /var/www/fence
        volumeMounts:
          - name: secrets-store-volume
            mountPath: "/mnt/secrets-store"
            readOnly: true
        resources:
            requests:
              cpu: 0.4
              memory: 1200Mi
            limits:
              cpu: 1.0
              memory: 2400Mi
        command: ["/bin/bash" ]
        args:
          - "-c"
          # Script always succeeds if it runs (echo exits with 0)
          - |
            eval $(python 2> /dev/null <<EOM
            import json
 
            creds = json.load(open('/mnt/secrets-store/fence-creds', 'r'))
            print('declare -A db_creds')
            for key in ['db_host', 'db_username', 'db_password', 'db_database']:
              print("db_creds['%s']='%s'" % (key, creds[key]))
            EOM
            )
            userdatamodel-init --username "${db_creds[db_username]}" --password "${db_creds[db_password]}" --host "${db_creds[db_host]}" --db "${db_creds[db_database]}"
            echo "Exit code: $?"
      restartPolicy: Never
---

# Source: fence/templates/job-useryaml.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: useryaml
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: gen3job
        aadpodidbinding: azure-pod-identity-binding-selector
    spec:
      automountServiceAccountToken: false
      volumes:
        - name: secrets-store-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: fence-azure-kvname
        - name: user-yaml
          configMap:
            name: user-yaml
      containers:
      - name: fence
        image: "andrebriggs/fence:latest"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 0.4
            memory: 1200Mi
          limits:
            cpu: 1.0
            memory: 2400Mi
        env:
          - name: PYTHONPATH
            value: /var/www/fence
          - name: SYNC_FROM_DBGAP
            value: 'false'
          - name: FENCE_PUBLIC_CONFIG
            valueFrom:
              configMapKeyRef:
                name: manifest-fence
                key: fence-config-public.yaml
                optional: true
        volumeMounts:
          - name: secrets-store-volume
            mountPath: "/mnt/secrets-store"
            readOnly: true
          - name: "user-yaml"
            mountPath: "/var/www/fence/user.yaml"
            subPath: user.yaml
        command: ["/bin/bash" ]
        args:
          - "-c"
          # Script always succeeds if it runs (echo exits with 0)
          - |
            echo "Copy fence-config and user.yaml from secret store mount"
            cp /mnt/secrets-store/fence-config /var/www/fence/fence-config.yaml
            if [ "$SYNC_FROM_DBGAP" = True ]; then
              fence-create sync --arborist http://arborist-service --sync_from_dbgap $(SYNC_FROM_DBGAP) --projects /var/www/fence/projects.yaml --yaml /var/www/fence/user.yaml
            else
              fence-create sync --arborist http://arborist-service --yaml /var/www/fence/user.yaml
            fi
            echo "Exit code: $?"
      restartPolicy: Never
---

# Source: fence/templates/spc-fence.yaml
apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: fence-azure-kvname
spec:
  provider: "azure" # Only supporting Azure right now
  parameters:
    usePodIdentity: 'true'
    keyvaultName: gen3-dev-ceok-kv
    cloudName: 'AzurePublicCloud'
    objects:  |
      array:
        - |
          objectName: fence-config
          objectType: secret
          objectVersion: 
        - |
          objectName: fence-creds
          objectType: secret
          objectVersion: 
        - |
          objectName: gen3-fence-jwt-keys
          objectType: key
          objectVersion: 
          objectAlias: fenceKey
        - |
          objectName: gen3-fence-jwt-keys
          objectType: secret
          objectVersion: 
        - |
          objectName: gen3-service-ca
          objectType: cert
          objectVersion: 
    resourceGroup: rg-gen3-dev 
    subscriptionId: b59451c1-cd43-41b3-b3a4-74155d8f6cf6 
    tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47

